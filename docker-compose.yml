x-service-templates:
  backend: &backend
    image: rinha:latest
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "50MB"
    networks:
      - backend
      - payment-processor
    depends_on:
      rinha-db:
        condition: service_healthy
      nats:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__nats=nats:4222
      - ConnectionStrings__postgres=Host=rinha-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Maximum Pool Size=5;Multiplexing=true;Timeout=15;Command Timeout=15;Cancellation Timeout=-1;No Reset On Close=true;Max Auto Prepare=20;Auto Prepare Min Usages=1;
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/payments-summary"]
      interval: 1s
      timeout: 3s
      retries: 10
      start_period: 2m

services:
  backend-1:
    <<: *backend
    container_name: backend-1
    hostname: backend-1
  backend-2:
    <<: *backend
    container_name: backend-2
    hostname: backend-2

  worker: 
    image: worker:latest
    environment:
      - DOTNETCORE_ENVIRONMENT=Production
      - Pool__DefaultPoolSize=50
      - Pool__FallbackPoolSize=50
      - Pool__RouterPoolSize=100
      - Persister__PersistPaymentsParallelism=10
      - Persister__GroupSize=100
      - Persister__Timeout=5
      - ConnectionStrings__nats=nats:4222
      - ConnectionStrings__postgres=Host=rinha-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Maximum Pool Size=5;Multiplexing=true;Timeout=15;Command Timeout=15;Cancellation Timeout=-1;No Reset On Close=true;Max Auto Prepare=20;Auto Prepare Min Usages=1;
      - ConnectionStrings__default=http://payment-processor-default:8080
      - ConnectionStrings__fallback=http://payment-processor-fallback:8080
    networks:
      - backend
      - payment-processor
    depends_on:
      rinha-db:
        condition: service_healthy
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "110MB"
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:8080"
    depends_on:
      backend-1:
        condition: service_healthy
      backend-2:
        condition: service_healthy
    networks:
      - backend
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"
  nats:
    image: nats:alpine
    hostname: nats
    networks:
      - backend
    ports:
      - "4222:4222"
    command: -js
    healthcheck:
      test: [ "CMD", "nats-server", "--version" ]
      interval: 1s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"
  
  rinha-db:
    image: postgres:17-alpine
    networks:
      - payment-processor
    command: 'postgres -c max_connections=400 -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d rinha" ]
      interval: 3s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true